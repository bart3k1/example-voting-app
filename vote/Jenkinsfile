pipeline {
   agent none


    stages {
          stage('build') {
           agent{
	docker{
		image 'python:2.7.16-slim'
		args '--user root'	
	   }
	}
   		when {
			changeset '**/vote/**'
	}
            steps {
                echo 'Compiling node app'
		dir('vote'){
			sh 'pip install -r requirements.txt'
		}
            }
        }
    

       stage('test') {
        agent{
	docker{
		image 'python:2.7.16-slim'
		args '--user root'	
	   }
	}
   		when {
			changeset '**/vote/**'
	}	
            steps {
                echo 'Runnning tests on worker app'
		dir('vote'){
        			sh 'pip install -r requirements.txt'
			sh 'nosetests -v'
		}
            }
        }
        
           stage('docker-package') {
		agent any
	    when {
		changeset '**/vote/**'
		branch 'master'
	}	
            steps {
                echo 'Packaging vote app with docker'	
		script{
		    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
			def voteImage = docker.build("bart3k1/vote:v${env.BUILD_ID}", "./vote")
			voteImage.push()
			voteImage.push("${env.BRANCH_NAME}")
		
                     }
		}        	
	   }
     }

    }

    post { 
         always { 
	        echo 'Build pipeline for vote is complete...'
       	 }
	failure {
		slackSend (channel:"#instavote", message: "Build failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
       	 }
	success { 
		slackSend (channel: "#instavote", message: "Build succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
       	 }
    }
}

        
     
